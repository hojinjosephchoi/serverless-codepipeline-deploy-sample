version: 0.2

phases:
  install:
    commands:
      - echo $USER
      - docker -v
      - docker-compose -v
      - docker version
      # - sudo apt-get update && sudo apt-get -y dist-upgrade
      # - sudo apt-get install -y mysql-client

      # npm configuration
      # here i configure npm to set the cache at /root/.npm
      - npm config -g set prefer-offline true
      - npm config -g set cache /root/.npm
      - npm config get cache

      - cd ${CODEBUILD_SRC_DIR}

      - echo ${CODEBUILD_SOURCE_VERSION}

    finally:
      - echo "=========================="
      - echo "install nothing"
      - echo "=========================="

  pre_build:
    commands:
      - chmod +x ./tools/db/start.sh
      - ./tools/db/start.sh
      - docker ps
      - sleep 10
      - chmod +x ./tools/db/update-mysql-grant.sh
      - ./tools/db/update-mysql-grant.sh
      - chmod +x ./tools/install_all_node_modules.sh
      - ./tools/install_all_node_modules.sh
    finally:
      - echo "=========================="
      - echo "mysql on docker ready, npm modules installed"
      - echo "=========================="

  build:
    commands:
      - chmod +x ./tools/services/test-all-services.sh
      - ./tools/services/test-all-services.sh
    finally:
      - echo "=========================="
      - echo "test on all services completed"
      - echo "=========================="

  post_build:
    commands:
      - cd $CODEBUILD_SRC_DIR/services/api
      - npm run deploy:dev
      - cd $CODEBUILD_SRC_DIR/services/back
      - npm run deploy:dev
    finally:
      - echo "=========================="
      - echo "build to all services completed"
      - echo "=========================="

cache:
  paths:
    - /root/.npm/**/*